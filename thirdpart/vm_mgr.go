package thirdpart

import (
	"fmt"
	"strings"
	"time"

	"github.com/jstang9527/opentest/model"
	mops "github.com/jstang9527/opentest/ops"
	"github.com/jstang9527/opentest/utils/tools"
	"github.com/tebeka/selenium"
)

/* + 虚拟蜜罐创建
   + 检测蜜罐状态
   + 虚拟蜜罐关机
   + 虚拟蜜罐开机
   + 虚拟蜜罐删除
*/

/*
   - 弹窗操作必须等待上一步操作完全完成才能继续往下操作
*/

// 创建虚拟蜜罐
func (t *TestTask) createVM() {
	var err error
	var ele selenium.WebElement
	name := "create honeypot"
	message := "success"
	var priority model.Level = model.High
	var status model.Level = model.Error
	start := time.Now()

	defer func() {
		mops.Console("create honeypot operation finished.")
	}()

	//1.进入蜜罐管理页面
	if err = t.entryHoneypotMgr(); err != nil {
		message = fmt.Sprintf("unable entry honeypot control page, err: %v", err.Error())
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}

	//2.获取页面数据，查看数据是否加载
	if ele, err = t.Wd.FindElement(selenium.ByXPATH, `//*[@id="root"]/div/div/div[2]/div/div[3]/div[1]/div[2]/div[2]/div[1]/button/span`); err == nil {
		message, _ = ele.Text()
	} else {
		//没找到元素
		message := fmt.Sprint("failed parse data, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}

	//3.找到创建蜜罐按钮并点击
	if ele, err = t.Wd.FindElement(selenium.ByXPATH, `//*[@id="root"]/div/div/div[2]/div/div[3]/div[1]/div[2]/div[2]/div[1]/button`); err != nil {
		//没找到元素
		message := fmt.Sprint("create honeypot buttom not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}
	ele.Click()

	//4.找到蜜罐名称输入框
	if ele, err = t.Wd.FindElement(selenium.ByXPATH, `//*[@id="honeypotName"]`); err == nil {
		ele.SendKeys(t.Project.ProjectName + t.Project.ProjectID[:4])
	} else {
		//没找到元素
		message := fmt.Sprint("the name Input not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}
	//8.感知ip选择按钮
	time.Sleep(time.Second)
	fmt.Println("感知ip选择按钮search")
	if selectBtm, err := t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[9]/div/div[2]/div/div[2]/div[2]/div/form/div[3]/div[2]/div/span/div/button`); err == nil {
		selectBtm.Click()
	} else {
		//没找到元素
		fmt.Println("-----> 没找到感知ip选择按钮")
		message := fmt.Sprint("the ip selectBtm not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}
	//9.选择第一个ip框
	if selectBtm, err := t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[10]/div/div/div/div/div/div/label/span[1]`); err == nil {
		selectBtm.Click()
	} else {
		//没找到元素
		fmt.Println("-----> 没找到感知ip多选框")
		message := fmt.Sprint("the ip choiseBox not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}
	//10.选择服务
	if selectBtm, err := t.Wd.FindElement(selenium.ByXPATH, `//*[@id="services"]/div[4]/label/span[1]`); err == nil {
		selectBtm.Click()
	} else {
		//没找到元素
		fmt.Println("-----> 没找到服务多选框")
		message := fmt.Sprint("the service btm not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}

	//11.提交按钮
	time.Sleep(time.Second)
	fmt.Println("提交按钮")
	if submit, err := t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[9]/div/div[2]/div/div[2]/div[2]/div/form/div[9]/div/div/span/button`); err == nil {
		submit.Click()
		fmt.Println("我点了提交")
	} else {
		//没找到元素
		fmt.Println("-----> 没找到蜜罐提交按钮")
		message := fmt.Sprint("the submit buttom not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		return
	}
	//12.提交完后进行检测，/html/body/div[4]/div/span/div/div/div/span 这个是报错信息框，去搜寻这个框的信息，如果有就是创建失败，截图
	if alert, err := t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[4]/div/span/div/div/div/span`); err != nil { //找到了，创建出现报错
		mops.Console("很不幸，出错了,错误信息：%v, err: %v", alert, err)
	} else { //就是没找到咯，功能正常
		mops.Console("没有报错信息")
	}
	now := time.Now()
	screenshot := tools.CreateMd5(name + start.String() + now.String() + message) //截图名
	t.createItem(name, message, screenshot, priority, model.Pass, time.Now().Sub(start))
	fmt.Println("-----> 完毕")
}

// 检测蜜罐状态
func (t *TestTask) getStatusVM() (status bool, err error) { //false,为蜜罐状态不正常(长时间没有进入正常态), err表示找不打该栏目
	// 进入虚拟机管理页面
	if err := t.entryHoneypotMgr(); err != nil {
		return false, err
	}
	// 进入后找蜜罐状态
	var vmstatus selenium.WebElement
	for i := 0; i < 10; i++ {
		time.Sleep(time.Millisecond * 300)
		if vmstatus, err = t.Wd.FindElement(selenium.ByXPATH, `//*[@id="root"]/div/div/div[2]/div/div[3]/div[1]/div[2]/div[2]/div[2]/div[2]/div/div/div/div/div/div/div/table/tbody/tr/td[10]/div/span`); err != nil {
			continue //没有找到这个元素
		}
		//找到这个元素，看看他的状态是什么？正在运行|关闭|开机
		content, _ := vmstatus.Text()
		content = strings.TrimSpace(content)
		if content == "正在运行" {
			return true, nil
		}
		if content != "" { //不为空,关机|暂停态
			return false, nil
		}
	}
	return false, err //循环完都没找到，把没找到的错误返回
}

func (t *TestTask) checkVMStatus() {
	name := "get honeypot status"
	var priority model.Level = model.High
	var status model.Level = model.Pass
	start := time.Now()

	defer func() {
		mops.Console("check honeypot status finished.")
	}()
	if bl, err := t.getStatusVM(); err == nil {
		if bl { //正常运行
			message := fmt.Sprint("No.1 honeypot running.")
			screenshot := tools.CreateMd5(message) //截图名
			t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		} else { //其他状态
			message := fmt.Sprint("No.1 honeypot not running: ", err)
			screenshot := tools.CreateMd5(message) //截图名
			t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
		}
	} else { //找不到元素
		message := fmt.Sprint("search honeypot status failed, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Error, time.Now().Sub(start))
	}
}

// 虚拟蜜罐关机
func (t *TestTask) shutdownHoneypot() {
	var ele selenium.WebElement
	var err error
	name := "shutdown honeypot"
	var priority model.Level = model.High
	var status model.Level = model.Pass
	start := time.Now()

	//打开选项卡
	if ele, err = t.Wd.FindElement(selenium.ByXPATH, `//*[@id="root"]/div/div/div[2]/div/div[3]/div[1]/div[2]/div[2]/div[2]/div[2]/div/div/div/div/div/div/div/table/tbody/tr/td[11]/div/button`); err != nil {
		message := fmt.Sprint("selectBox not found when search shutdown btm, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Error, time.Now().Sub(start))
	}
	ele.Click()
	// time.Sleep(time.Millisecond * 100)
	//点击关机
	if ele, err = t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[9]/div/div/ul/li[3]`); err != nil {
		message := fmt.Sprint("shutdown btm not found, err: ", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Error, time.Now().Sub(start))
	}
	ele.Click()
	// 确认关机
	time.Sleep(time.Second)
	ele, _ = t.Wd.FindElement(selenium.ByXPATH, `/html/body/div[11]/div/div[2]/div/div[2]/div/div/div[2]/button[2]`)
	ele.Click()
	message := fmt.Sprint("shutdown No.1 honeypot.")
	screenshot := tools.CreateMd5(message) //截图名
	t.createItem(name, message, screenshot, priority, status, time.Now().Sub(start))
}

// 虚拟蜜罐开机
func (t *TestTask) startVM() {

}

// 删除虚拟蜜罐
func (t *TestTask) deleteVM() {

}
