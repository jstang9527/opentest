package thirdpart

import (
	"fmt"
	"strings"
	"time"

	"github.com/jstang9527/opentest/utils/tools"

	mops "github.com/jstang9527/opentest/ops"

	"github.com/jstang9527/opentest/model"
	"github.com/tebeka/selenium"
)

// IndexLogin ...
func (t *TestTask) checkLogin() error {
	name := "login"
	message := "success"
	var priority model.Level = model.High
	start := time.Now()
	//1.找到用户输入框id
	userName, err := t.Wd.FindElement(selenium.ByID, "userAccount")
	if err == nil {
		userName.SendKeys("adminantiy")
		mops.Console("input username success in login page.")
	} else {
		message = fmt.Sprintln("username input not found in login page.", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
		return err
	}

	//2.找到密码输入框id
	userPassword, err := t.Wd.FindElement(selenium.ByID, "userPassword")
	if err == nil {
		userPassword.SendKeys("antiylabsnode)9*")
		mops.Console("password input success in login page.")
	} else {
		message = fmt.Sprintln("password input not found in login page.", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
		return err
	}

	//3.找到验证码输入框id
	verificationCode, err := t.Wd.FindElement(selenium.ByID, "verificationCode")
	if err == nil {
		verificationCode.SendKeys("1234")
		mops.Console("input auth code success in login page.")
	} else {
		message = fmt.Sprintln("auth'code input not found in login page.", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
		return err
	}

	//4.找到提交按钮id
	login, err := t.Wd.FindElement(selenium.ByXPATH, `//*[@id="root"]/div/div[2]/div[2]/form/div[4]/div/div/span/button`)
	if err == nil {
		//找到就点击提交
		err = login.Click()
		if err != nil {
			message = fmt.Sprintln("can't click login buttom in login page.", err)
			screenshot := tools.CreateMd5(message) //截图名
			t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
			return err
		}
		mops.Console("login success.")
	} else {
		//找不到提交按钮，xpath出错咯
		message = fmt.Sprintln("login buttom not found in login page.", err)
		screenshot := tools.CreateMd5(message) //截图名
		t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
		return err
	}
	//5.等待加载管理面板
	//  刷新进入管理面板,必须刷新才能获取当前url连接，否则获取的是上一级的
	for times, i := 0, 0; i < 10; i++ {
		times = times + 3
		time.Sleep(time.Second * time.Duration(times))
		t.Wd.Refresh()
		cURL, _ := t.Wd.CurrentURL()
		if strings.HasSuffix(strings.TrimSpace(cURL), "overview") {
			mops.Console("already change url: %v with times %v", cURL, times)
			break
		}
		if i == 9 {
			message := fmt.Sprintln("can't change to index page in login page.")
			screenshot := tools.CreateMd5(message) //截图名
			t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
			return err
		}
	}

	//6.查看首页数据是否加载
	for i := 0; i < 10; i++ {
		if content, err := t.Wd.FindElement(selenium.ByClassName, "title___2A99-"); err != nil {
			time.Sleep(time.Millisecond * 200)
			continue
		} else if c, _ := content.Text(); c != "" { //加载到数据后
			message = c
			break
		}
		if i == 9 { //超过10次尝试无果
			message := fmt.Sprintln("unable load  login page data More than 10.")
			screenshot := tools.CreateMd5(message) //截图名
			t.createItem(name, message, screenshot, priority, model.Fatal, time.Now().Sub(start))
			return err
		}
	}

	now := time.Now()
	screenshot := tools.CreateMd5(name + start.String() + now.String() + message) //截图名
	t.createItem(name, message, screenshot, priority, model.Pass, time.Now().Sub(start))
	time.Sleep(time.Second * 1)
	return nil
}
