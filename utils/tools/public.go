package tools

import (
	"crypto/md5"
	"encoding/json"
	"fmt"
	"os"
	"time"
)

// CreateMd5 ...
func CreateMd5(str string) string {
	str = fmt.Sprintf("%v%v", str, time.Now().UnixNano())
	md5String := fmt.Sprintf("%x", md5.Sum([]byte(str)))
	return md5String
}

//MapToJSON map转json
func MapToJSON(tempMap *map[string]interface{}) (string, error) {
	data, err := json.Marshal(tempMap)
	if err != nil {
		return "", err
	}
	return string(data), nil
}

//SliceToJSON slice转json
func SliceToJSON(s []map[string]interface{}) (string, error) {
	data, err := json.Marshal(s)
	if err != nil {
		return "", err
	}
	return string(data), err
}

// PathExists 文件或文件夹是否存在
func PathExists(path string) (bool, error) {
	_, err := os.Stat(path)
	if err == nil {
		return true, nil
	}
	if os.IsNotExist(err) {
		return false, nil
	}
	return false, err
}
