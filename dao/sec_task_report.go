package dao

import (
	"time"

	"github.com/e421083458/gorm"
	"github.com/gin-gonic/gin"
	"github.com/jstang9527/gateway/public"
)

// NmapReport ...
type NmapReport struct {
	ID        string    `json:"id" gorm:"primary_key"`
	TaskID    string    `json:"task_id" gorm:"column:task_id" description:"任务id"`
	PID       int64     `json:"pid" gorm:"column:pid" description:"所属任务id"`
	JSONStr   string    `json:"json_str" gorm:"column:json_str" description:"任务结果"`
	CreatedAt time.Time `json:"create_at" gorm:"column:create_at" description:"添加时间"`
	IsDelete  int8      `json:"is_delete" gorm:"column:is_delete" description:"是否已删除；0：否；1：是"`
}

// TableName 表名
func (s *NmapReport) TableName() string {
	return "nmap_report"
}

// Find 查服务host_info
func (s *NmapReport) Find(c *gin.Context, tx *gorm.DB, search *NmapReport) (*NmapReport, error) {
	out := &NmapReport{}
	err := tx.SetCtx(public.GetGinTraceContext(c)).Table(s.TableName()).Where(search).Where("is_delete=0").Order("create_at desc").First(out).Error
	if err != nil {
		return nil, err
	}
	return out, nil
}
