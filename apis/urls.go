package apis

import (
	"net/http"
	"strings"

	"github.com/jstang9527/opentest/apis/authorization"

	"github.com/jstang9527/opentest/apis/service"
	"github.com/jstang9527/opentest/views"
)

// V1_0 ...
func V1_0(w http.ResponseWriter, r *http.Request) {

	uri := r.RequestURI
	uri = strings.Split(uri, "?")[0]
	// fmt.Println(uri)
	switch uri {
	case "/api/v1.0/authorization/test":
		authorization.Control(w, r)
	case "/api/v1.0/authorization/vm":
		service.VMMgr(w, r)
	case "/api/v1.0/service/testresult/project":
		service.Project(w, r)
	case "/api/v1.0/service/testresult/projectdetail":
		service.ProjectDetail(w, r)
	default:
		w.Write([]byte(`<h1 style="color:red;text-align:center">404 网页丢失了</h1>`))
		views.DialLog(r, 404)
	}
	// if strings.HasPrefix(uri, "/api/v1.0/authorization") {
	// 	authorization.control
	// 	return
	// }
	// if strings.HasPrefix(uri, "/api/v1.0/service") {
	// 	fmt.Println("bbb")
	// 	return
	// }

}

// App ...
/*
;对外开发的接口查询API
/api/v1.0/service/testresult/project?id=xxxxxxxx  //只给查,给id查id,不给查全部
/api/v1.0/service/testresult/projectdetail?id=xxxxx      //只给查,给id查id,不给查全部

;开放给jenkins的执行测试接口
/api/v1.0/authorization/control?token=xxxxxxxx&hostname=172.31.50.156
*/

// App 进来的是/api  匹配版本
func App(w http.ResponseWriter, r *http.Request) {
	uri := r.RequestURI
	version := strings.Split(uri[1:], "/")[1]
	switch version {
	case "v1.0":
		V1_0(w, r)
	default:
		w.Write([]byte(`<h1 style="color:red;text-align:center">404 网页丢失了</h1>`))
		views.DialLog(r, 404)
	}
}
