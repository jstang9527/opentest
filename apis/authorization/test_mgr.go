package authorization

import (
	"fmt"
	"net/http"

	"github.com/jstang9527/opentest/ops"
	"github.com/jstang9527/opentest/thirdpart/selenium"

	"github.com/jstang9527/opentest/views"
)

// Control 给jenkins调用的接口
func Control(w http.ResponseWriter, r *http.Request) {
	method := r.Method

	if method == "GET" {
		testApp(w, r)
	} else {
		views.DialLog(r, 403)
		w.Write([]byte(`<h1 style="color:red;text-align:center">403 无访问权限</h1>`))
	}
}

//TestApp ...
func testApp(w http.ResponseWriter, r *http.Request) {
	ops.Console("进入control")
	defer func() {
		if err := recover(); err != nil {
			views.DialLog(r, 500)
			w.Write([]byte(`<h1 style="color:red;text-align:center">500 服务器错误</h1>`))
		}
	}()
	projectName := r.URL.Query().Get("app")
	projectAddr := r.URL.Query().Get("addr")
	snapshotIP := r.URL.Query().Get("dip")
	fileName := r.URL.Query().Get("file")
	if projectName == "" || snapshotIP == "" || fileName == "" {
		ops.Console("url params error.")
		w.Write([]byte(`{"code":"400","message":"lost params"}`))
		views.DialLog(r, 400)
		return
	}
	taskID, err := selenium.ParseStart(projectName, projectAddr, snapshotIP, fileName)
	if err != nil {
		w.Write([]byte("Server ERROR"))
		views.DialLog(r, 500)
	}
	response := fmt.Sprintf(`{"data": {"task_id": "%v"},"result_code": %d,"message":"success"}`, taskID, 200)
	w.Write([]byte(response))
	views.DialLog(r, 200)
}
